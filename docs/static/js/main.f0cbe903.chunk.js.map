{"version":3,"sources":["Components/Editor/FormTypes/Button.jsx","Components/Editor/FormTypes/Formatting.jsx","Components/Editor/FormTypes/Match.jsx","Components/Editor/FormTypes/Forms/models.js","Components/Editor/FormTypes/Forms/HeadingForm.jsx","Components/Editor/FormTypes/Forms/ImageForm.jsx","Components/Editor/FormTypes/Forms/ParagraphForm.jsx","Components/Editor/FormTypes/Forms/BlockquoteForm.jsx","Components/Editor/FormTypes/Forms/EmbedForm.jsx","Components/Editor/FormTypes/Forms/ListForm.jsx","Components/Editor/FormTypes/Forms/TableForm.jsx","Components/Editor/FormTypes/FormSelector.jsx","Components/Editor/AddSection.jsx","Components/Editor/ShowSection.jsx","Components/Editor/Editor.jsx","App.jsx","index.js"],"names":["Button","props","type","onClick","click","className","active","data-tooltip","aria-label","tooltip","onMouseDown","e","preventDefault","children","Formatting","apply","includes","tag","selection","window","getSelection","console","log","parent","anchorNode","nodeName","parentElement","line","textContent","st","Math","min","anchorOffset","focusOffset","ed","max","newNode","document","createElement","appendChild","createTextNode","substring","nodes","length","replaceChild","after","setTag","align","setAlign","Match","pattern","test","toLowerCase","String","prototype","formatSpace","res","prev","this","letter","ParagraphModel","tagName","content","style","id","classes","_id","_class","_style","_align","HeaderModel","text","ImageModel","filename","src","alt","height","width","caption","EmbedModel","BlockquoteModel","ListModel","TableModel","HeadingForm","useState","setText","textInput","useRef","useEffect","ele","current","focus","onSubmit","done","onReset","cancel","onChange","target","value","fontWeight","fontSize","lineHeight","marginBottom","textAlign","ref","ImageForm","name","setName","setSrc","setHeight","setWidth","ratio","setRatio","imgStyle","setImgStyle","imgLoaded","str","JSON","stringify","formatStyle","round","onLoad","file","files","reader","FileReader","addEventListener","Name","result","readAsDataURL","ParagraphForm","editorEl","innerHTML","contentEditable","onKeyDown","keyCode","focusNode","start","nodeValue","newText","minHeight","boxSizing","outline","padding","whiteSpace","BlockquoteForm","p","EmbedForm","dangerouslySetInnerHTML","__html","resize","placeholder","ListForm","listStyle","keypress","parentNode","firstChild","shifKey","ctrlKey","altKey","node1","br","node2","li","TableForm","rows","setRows","cols","setCols","markup","tdRegex","values","match","row","rowVals","col","push","getValues","i","j","createTableMarkUp","FormSelector","data","AddSection","isEditing","setIsEditing","addSection","index","EditSelector","ShowSection","isHover","setIsHover","isEdit","setIsEdit","updateSection","onMouseEnter","onMouseLeave","display","_html","flex","Editor","setContent","temp","splice","map","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f0cbe903.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n// ehh... might as well be its own file?\r\n// button that does some neat things\r\nconst Button = props => {\r\n  return (\r\n    <button type=\"button\" \r\n      onClick={props.click}\r\n      className= {props.active ? \"btn btn-sm btn-dark\" : \"btn btn-sm btn-outline-dark\"} \r\n      data-tooltip=\"\" aria-label={props.tooltip}\r\n      onMouseDown={e => e.preventDefault()}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\n\r\n// Basically shove all of our buttons into one component! \r\nconst Formatting = props => {\r\n\r\n  // applies inline formatting to text\r\n  const apply = type => {\r\n    const acceptedTags = [\"p\", \"ul\", \"ol\", \"blockquote\"];\r\n    // if the tag isn't one of the accepted tags\r\n    // don't allow further formatting\r\n    if(!acceptedTags.includes(props.tag)) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    console.log(type);\r\n    if(selection.type === \"Caret\") {\r\n      return; // nothing to do here\r\n    }\r\n    console.log(selection);\r\n    let parent = selection.anchorNode;\r\n    if(parent.nodeName === \"#text\") {\r\n      parent = parent.parentElement;\r\n    }\r\n    let line = selection.anchorNode.textContent;\r\n    let st = Math.min(selection.anchorOffset, selection.focusOffset);\r\n    let ed = Math.max(selection.anchorOffset, selection.focusOffset);\r\n    let newNode = document.createElement(type);\r\n    newNode.appendChild(document.createTextNode(line.substring(st, ed)));\r\n    let nodes = [\r\n      document.createTextNode(line.substring(0, st)),\r\n      newNode,\r\n      document.createTextNode(line.substring(ed, line.length))\r\n    ];\r\n    parent.replaceChild(nodes[0], selection.anchorNode);\r\n    nodes[0].after(nodes[1]);\r\n    nodes[1].after(nodes[2]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap justify-content-center\">\r\n\r\n      {/* I have higher ambitions for this section, mostly just grid / columns */}\r\n      {/* but it made sense to put tables and lists in here too */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Layout</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.tag === \"columns\"} tooltip=\"Columns\">\r\n            <i className=\"fas fa-columns\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"table\"} tooltip=\"Table\" click={e => props.setTag(\"table\")}>\r\n            <i className=\"fas fa-table\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"ul\"} tooltip=\"Unordered List\" click={e => props.setTag(\"ul\")}>\r\n            <i className=\"fas fa-list-ul\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"ol\"} tooltip=\"Ordered List\" click={e => props.setTag(\"ol\")}>\r\n            <i className=\"fas fa-list-ol\"></i>\r\n          </Button>\r\n          {/* Do we need to allow the user to indent or outdent lists? */}\r\n          {/* Seems like a nice to have for now */}\r\n          {/* <Button active={false} tooltip=\"Indent\">\r\n            <i className=\"fas fa-indent\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Outdent\">\r\n            <i className=\"fas fa-outdent\"></i>\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Various headers or other content to pick from */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Type</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.tag === \"h1\"} tooltip=\"Title\" click={e => props.setTag(\"h1\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>1</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h2\"} tooltip=\"Subtitle\" click={e => props.setTag(\"h2\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>2</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h3\"} tooltip=\"Heading\" click={e => props.setTag(\"h3\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>3</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h4\"} tooltip=\"Subheading\" click={e => props.setTag(\"h4\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>4</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"p\"} tooltip=\"Paragraph\" click={e => props.setTag(\"p\")}>\r\n            <i className=\"fas fa-paragraph\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"img\"} tooltip=\"Image\" click={e => props.setTag(\"img\")}>\r\n            <i className=\"far fa-image\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"file\"} tooltip=\"File Download\" click={e => props.setTag(\"file\")}>\r\n            <i className=\"fas fa-file-download\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"iframe\"} tooltip=\"Embed\" click={e => props.setTag(\"iframe\")}>\r\n            <i className=\"far fa-play-circle\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"pre\"} tooltip=\"Code Block\" click={e => props.setTag(\"pre\")}>\r\n            <i className=\"fas fa-code\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"blockquote\"} tooltip=\"Quote\" click={e => props.setTag(\"blockquote\")}>\r\n            <i className=\"fas fa-quote-left\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Control alignment here */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Align</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.align === \"left\"} tooltip=\"Align Left\" click={e => props.setAlign(\"left\")}>\r\n            <i className=\"fas fa-align-left\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"center\"} tooltip=\"Center Text\" click={e => props.setAlign(\"center\")}>\r\n            <i className=\"fas fa-align-center\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"right\"} tooltip=\"Align Right\" click={e => props.setAlign(\"right\")}>\r\n            <i className=\"fas fa-align-right\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"justify\"} tooltip=\"Justify Text\" click={e => props.setAlign(\"justify\")}>\r\n            <i className=\"fas fa-align-justify\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tags for formatting text inside other sections */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Inline</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={false} tooltip=\"Bold\" click={e => apply(\"strong\")}>\r\n            <i className=\"fas fa-bold\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Italic\" click={e => apply(\"em\")}>\r\n            <i className=\"fas fa-italic\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Underline\" click={e => apply(\"u\")}>\r\n            <i className=\"fas fa-underline\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Link\">\r\n            <i className=\"fas fa-link\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Inline Code\" click={e => apply(\"code\")}>\r\n            <i className=\"fas fa-code\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formatting;","import React from 'react';\r\n\r\n\r\n// ehh... might as well be its own file?\r\n// display the child node(s) if the pattern matches the tag\r\nconst Match = props => {\r\n  return (\r\n    props.pattern.test(props.tag.toLowerCase()) ? props.children : \"\"\r\n  );\r\n}\r\n\r\nexport default Match;","// front end models so I can keep the type of data I'm working with straight\r\n// but as Lilith says \"I hate anything straight\" \r\n// really I just need the markup so it can be displayed but I guess I have\r\n// higher ambitions for what we'll store in the DB\r\n// each class will have an _html() method to retrieve the markup\r\n\r\n\r\n// remove excess spaces in the _html\r\nString.prototype.formatSpace = function() {\r\n    let res = \"\", prev = null;\r\n    for(let letter of this) {\r\n        if(letter !== \" \" || prev !== \" \") {\r\n            res += letter;\r\n        }\r\n        prev = letter;\r\n    }\r\n    return res;\r\n}\r\n\r\n// class for sections containing a paragraph\r\n// going to just store the content as a string ¯\\_(ツ)_/¯\r\n// this is pretty much the same as header but I can do something \r\n// different with it later maybe\r\nexport class ParagraphModel {\r\n\r\n    constructor(tagName, content, align, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing an header\r\n// like: h1, h2, h3, h4...\r\nexport class HeaderModel {\r\n\r\n    constructor(tagName, text, align, style, id, classes){\r\n        this.tagName = tagName;\r\n        this.text = text;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.text}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing an image\r\nexport class ImageModel {\r\n\r\n    constructor(tagName, filename, src, alt, height, width, align, caption, style, id, classes){\r\n        this.tagName = tagName;\r\n        this.filename = filename;\r\n        this.src = src;\r\n        this.alt = alt;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.align = align;\r\n        this.caption = caption;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.style ? _style = `style=\"${this.style}\"` : _style = \"\";\r\n        this.align ? _align = `style=\"text-align: ${this.align}\";` : _align = \"\";\r\n        return `<figure ${_align} >\r\n            <img src=\"${this.src}\" alt=\"${this.alt}\" ${_id} ${_class} ${_style} />\r\n        </figure>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing embed code\r\n// typically an iframe from youtube or vimeo\r\nexport class EmbedModel {\r\n\r\n    constructor(tagName, content) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n    }\r\n\r\n    // don't really need to do anything with this one!\r\n    _html() {\r\n        return this.content;\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing blockquotes\r\n// pretty identical to paragraphs\r\nexport class BlockquoteModel {\r\n\r\n    constructor(tagName, content, align, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// list model for ul and ol\r\n// similar to paragraphs and blockquotes\r\n// didn't make sense to apply align on this one\r\n// maybe I'll change my mind we'll see!\r\nexport class ListModel {\r\n\r\n    constructor(tagName, content, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        _style = `style=\"${this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// table model\r\n// similar to lists\r\n// didn't make sense to apply align on this one either\r\nexport class TableModel {\r\n\r\n    constructor(tagName, content, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        _style = `style=\"${this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { HeaderModel } from './models';\r\n\r\n// from for creating a header: h1, h2, h3, h4 \r\n// do we need h5 and h6?\r\nconst HeadingForm = props => {\r\n  \r\n  // const [style, setStyle] = useState(\"\")\r\n  // const [id, setId] = useState(\"\");\r\n  // const [classes, setClasses] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // should really do something with this huh?\r\n  let textInput = useRef(null);\r\n\r\n  // quick reference for header styles\r\n  const headerStyles = {\r\n    \"h1\": {fontWeight: 500, fontSize: \"32px\", lineHeight: \"48px\", marginBottom: \"20px\"},\r\n    \"h2\": {fontWeight: 500, fontSize: \"26px\", lineHeight: \"39px\", marginBottom: \"20px\"},\r\n    \"h3\": {fontWeight: 500, fontSize: \"22px\", lineHeight: \"33px\", marginBottom: \"20px\"},\r\n    \"h4\": {fontWeight: 500, fontSize: \"22px\", lineHeight: \"33px\", marginBottom: \"20px\"}\r\n  };\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new HeaderModel(props.tag, text, props.align, \"\", \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel(\"cancelling\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"text\", props)\r\n    if(props.ele) {\r\n      setText(props.ele.text);\r\n    }\r\n    textInput.current.focus();\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <div className=\"input-group my-3\">\r\n        <span className=\"input-group-text\" style={{width:\"50px\"}}>{props.tag}</span>\r\n        <input type=\"text\" \r\n          className=\"form-control mb0\" \r\n          onChange={e => setText(e.target.value)} \r\n          style={{...headerStyles[props.tag], textAlign: props.align}}\r\n          value={text} \r\n          ref={textInput} \r\n        />\r\n      </div>\r\n      {/* <div className=\"input-group mb-3\">\r\n        <span className=\"input-group-text\">Custom Style</span>\r\n        <input type=\"text\" \r\n          className=\"form-control mb0\" \r\n          onChange={e => setStyle(e.target.value)} \r\n          value={style} \r\n        />\r\n      </div> */}\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n  \r\n}\r\n  \r\nexport default HeadingForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ImageModel } from './models';\r\n\r\n\r\n// helper function for formatting our style a bit\r\nfunction formatStyle(style) {\r\n  let str = JSON.stringify(style);\r\n  let res = \"\";\r\n  for(let letter of str) {\r\n    if(letter === \",\") {\r\n      res += \";\";\r\n    } else if(letter !== \"{\" && letter !== \"}\" && letter !== \"\\\"\") {\r\n      res += letter;\r\n    }\r\n  }\r\n  res += \";\"\r\n  console.log(res);\r\n  return res;\r\n}\r\n\r\n// Image upload is complicated\r\n// probably put too much time into this one...\r\nconst ImageForm = props => {\r\n  \r\n  const [name, setName] = useState(\"not selected\");\r\n  const [src, setSrc] = useState(\"\");\r\n  const [height, setHeight] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const [ratio, setRatio] = useState(null);\r\n  const [imgStyle, setImgStyle] = useState({});\r\n\r\n  const upload = e => {\r\n    setSrc(\"\");\r\n    setImgStyle({});\r\n    console.log(e);\r\n    let file = e.target.files[0];\r\n    console.log(file);\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      setName(file.Name);\r\n      setSrc(reader.result);\r\n    }, false);\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new ImageModel(\"img\", name, src, name, height, width, props.align, \"\", formatStyle(imgStyle), \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  const imgLoaded = e => {\r\n    setWidth(e.target.width);\r\n    setHeight(e.target.height);\r\n    setRatio(e.target.width / e.target.height);\r\n  }\r\n\r\n  const changeHeight = e => {\r\n    setHeight(e.target.value);\r\n    setWidth(Math.round(e.target.value * ratio));\r\n  }\r\n\r\n  const changeWidth = e => {\r\n    setWidth(e.target.value);\r\n    setHeight(Math.round( e.target.value / ratio));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImgStyle({height: height+\"px\", width: width+\"px\"});\r\n  }, [height]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      \r\n      {src ? <div className=\"row my-3\">\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Height</span>\r\n          <input type=\"number\" min=\"0\" value={height} onChange={changeHeight} className=\"form-control\" />\r\n          <span className=\"input-group-text\">px</span>\r\n        </div>\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Width</span>\r\n          <input type=\"number\" min=\"0\" value={width} onChange={changeWidth} className=\"form-control\" />\r\n          <span className=\"input-group-text\">px</span>\r\n        </div>\r\n        </div> : \"\"}\r\n\r\n      {src ? <figure style={{textAlign: props.align}}>\r\n        <img src={src} alt={name} style={imgStyle}\r\n          onLoad={e => imgLoaded(e)} \r\n          onChange={e => imgLoaded(e)} \r\n          className=\"img-upload\" />\r\n      </figure> : \"\"}\r\n\r\n      <input \r\n        type=\"file\" \r\n        className=\"form-control\"\r\n        onChange={upload}\r\n      />\r\n      \r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n  \r\n}\r\n  \r\nexport default ImageForm;","import React, { useRef, useEffect } from 'react';\r\nimport { ParagraphModel } from './models';\r\n\r\n\r\n// paragraphs are not as involved as I expected\r\nconst ParagraphForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new ParagraphModel(props.tag, editorEl.current.innerHTML, props.align, \"\", \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.ele) {\r\n      editorEl.current.innerHTML = props.ele.content;\r\n    }\r\n  }, [props.tag]);\r\n\r\n  const keypress = e => {\r\n    console.log(e);\r\n    if(e.keyCode === 9) {\r\n      e.preventDefault();\r\n      // Tab should add 4 spaces to the current line\r\n      const selection = window.getSelection();\r\n      console.log(selection);\r\n      if(selection.anchorNode !== selection.focusNode) {\r\n        // TODO: allow indenting multiple lines\r\n        return;\r\n      } else {\r\n        let start = Math.min(selection.anchorOffset, selection.focusOffset);\r\n        let text = selection.focusNode.nodeValue;\r\n        let newText = text.substring(0, start) + \"    \" + text.substring(start, text.length);\r\n        selection.focusNode.nodeValue = newText;\r\n      }\r\n    }\r\n    // these are the arrow keys\r\n    // if([37, 38, 39, 40].includes(e.keyCode) {\r\n    //   // TODO: check the cursor position\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n    editorEl.current.appendChild(document.createTextNode(\"\"));\r\n    editorEl.current.focus();\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <p id=\"editor-p\" contentEditable=\"true\"\r\n        ref={editorEl}\r\n        onKeyDown={keypress}\r\n        style={{\r\n          width: \"100%\",\r\n          minHeight: \"50px\",\r\n          boxSizing: \"border-box\",\r\n          outline: \"2px dashed #ccc\",\r\n          padding: \"20px\",\r\n          whiteSpace: \"pre\",\r\n          textAlign: props.align\r\n        }}></p>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default ParagraphForm;","import React, { useRef, useEffect } from 'react';\r\nimport { BlockquoteModel } from './models';\r\n\r\n\r\n// basically a glorified paragraph...\r\nconst BlockquoteForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    // makes sense to give it the blockquote css class by default\r\n    props.done(new BlockquoteModel(props.tag, editorEl.current.innerHTML, props.align, \"\", \"\", \"blockquote\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.ele) {\r\n      editorEl.current.innerHTML = props.ele.content;\r\n    } else {\r\n      let p = document.createElement(\"p\");\r\n      p.appendChild(document.createTextNode(\"Your quote here\"));\r\n      editorEl.current.appendChild(p);\r\n      editorEl.current.focus();\r\n    }\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <blockquote \r\n        id=\"editor-blockquote\"\r\n        className=\"blockquote\"\r\n        ref={editorEl} \r\n        contentEditable=\"true\" \r\n        style={{\r\n          outline: \"2px dashed #ccc\",\r\n          padding: \"20px\",\r\n          textAlign: props.align\r\n        }}\r\n      ></blockquote>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default BlockquoteForm;","import React, { useState, useEffect } from 'react';\r\nimport { EmbedModel } from './models';\r\n\r\n\r\n// pretty basic form\r\n// embed will be like an iframe from youtube or vimeo\r\nconst EmbedForm = props => {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new EmbedModel(props.tag, text));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.ele) {\r\n      setText(props.ele.content);\r\n    }\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-section\" \r\n              dangerouslySetInnerHTML={{__html: text}} />\r\n      <form onSubmit={done} onReset={cancel}>\r\n        <textarea \r\n          className=\"form-control\"\r\n          style={{resize: \"none\"}}\r\n          placeholder=\"Paste the embed link here\" \r\n          onChange={e => setText(e.target.value)} \r\n          value={text} />\r\n        <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n        <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n      </form>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default EmbedForm;","import React, { useRef, useEffect } from 'react';\r\nimport { ListModel } from './models';\r\n\r\n\r\n// lists are not as involved as I expected\r\nconst ListForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n  const listStyle = {\r\n    width: \"100%\",\r\n    minHeight: \"50px\",\r\n    boxSizing: \"border-box\",\r\n    outline: \"2px dashed #ccc\",\r\n    padding: \"20px\"\r\n  }\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    console.log(editorEl.current.innerHTML);\r\n    props.done(new ListModel(props.tag, editorEl.current.innerHTML, \"\", \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  // bunch of overly complicated code to deal with linebreaks\r\n  const keypress = e => {\r\n    const selection = window.getSelection();\r\n    // prevent adding linebreaks above from backspacing\r\n    if( e.keyCode === 8 && \r\n      selection.focusNode.nodeName === \"LI\" && \r\n      selection.focusNode === selection.focusNode.parentNode.firstChild) {\r\n      e.preventDefault();\r\n    }\r\n    // the following key combinations should make a linebreak\r\n    // enter + shift / control enter + shift / enter + shift alt\r\n    if(e.keyCode === 13 && (e.shifKey || e.ctrlKey || e.altKey)) {\r\n      e.preventDefault();\r\n      if(selection.anchorNode !== selection.focusNode) {\r\n        // TODO: allow indenting multiple lines\r\n        return;\r\n      } else {\r\n        let start = Math.min(selection.anchorOffset, selection.focusOffset);\r\n        let text = selection.focusNode.nodeValue;\r\n        if(text) {\r\n          let parent = selection.anchorNode;\r\n          if(parent.nodeName === \"#text\") {\r\n            parent = parent.parentElement;\r\n          }\r\n          let node1 = document.createTextNode(text.substring(0, start));\r\n          let br = document.createElement(\"br\");\r\n          let node2 = document.createTextNode(text.substring(start, text.length))\r\n          parent.replaceChild(node1, selection.anchorNode);\r\n          node1.after(br);\r\n          br.after(node2);\r\n        }\r\n      }\r\n    }\r\n    // Tab should maybe let us indent further\r\n    // if(e.keyCode === 9) {\r\n    //   e.preventDefault();\r\n    // }\r\n    // these are the arrow keys\r\n    // if([37, 38, 39, 40].includes(e.keyCode) {\r\n    //   // TODO: check the cursor position\r\n    // }\r\n  }\r\n\r\n  // add the first li into the list so the user can begin editing?\r\n  // this seems to work \r\n  useEffect(() => {\r\n    if(props.ele) {\r\n      editorEl.current.innerHTML = props.ele.content;\r\n    } else {\r\n      let li = document.createElement(\"li\");\r\n      li.appendChild(document.createTextNode(\"your list here\"));\r\n      editorEl.current.appendChild(li);\r\n    }\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      {props.tag === \"ul\" ? <ul id=\"editor-ul\" contentEditable=\"true\"\r\n        ref={editorEl} style={listStyle} onKeyDown={keypress}></ul> : \"\" }\r\n      {props.tag === \"ol\" ? <ol id=\"editor-ul\" contentEditable=\"true\"\r\n        ref={editorEl} style={listStyle} onKeyDown={keypress}></ol> : \"\" }\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default ListForm;","import React, { useRef, useEffect, useState } from 'react';\r\nimport { TableModel } from './models';\r\n\r\n\r\n// helper to generate the table \r\nfunction createTableMarkUp(cols, rows) {\r\n  let res = \"<thead>\";\r\n  for(let i=0; i<rows; i++) {\r\n    res += \"<tr>\";\r\n    for(let j=0; j<cols; j++) {\r\n      res += \"<td><br></td>\";\r\n    }\r\n    res += \"</tr>\";\r\n  }\r\n  return res + \"</thead>\";\r\n}\r\n\r\nfunction getValues(markup) {\r\n  // console.log(markup);\r\n  if(markup.length < 1) {\r\n    return;\r\n  }\r\n  const trRegex = /<tr>(.*?)<\\/tr>/;\r\n  const tdRegex = /<td>(.*?)<\\/td>/;\r\n  const values = [];\r\n  for(let row of markup.match(trRegex)) { \r\n    let rowVals = [];\r\n    console.log(row);\r\n    for(let col of row.match(tdRegex)) {\r\n      rowVals.push(col);\r\n    }\r\n    values.push(rowVals);\r\n  }\r\n  return values;\r\n}\r\n\r\n// lists are not as involved as I expected\r\nconst TableForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n  const [rows, setRows] = useState(1);\r\n  const [cols, setCols] = useState(3);\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    console.log(editorEl.current.innerHTML);\r\n    // I'll be applying the table and table-bordered classes by default\r\n    props.done(new TableModel(props.tag, editorEl.current.innerHTML, \"\", \"\", \"table table-bordered\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.ele) {\r\n      editorEl.current.innerHTML = props.ele.content;\r\n    } else {\r\n      let prev = editorEl.current.innerHTML;\r\n      console.log(getValues(prev));\r\n      editorEl.current.innerHTML = createTableMarkUp(cols, rows);\r\n    }\r\n  }, [rows, cols])\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel} className=\"p-3\">\r\n      <div className=\"row my-3\">\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Rows</span>\r\n          <input type=\"number\" min=\"1\" value={rows} onChange={e => setRows(e.target.value)} className=\"form-control\" />\r\n        </div>\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Columns</span>\r\n          <input type=\"number\" min=\"1\" value={cols} onChange={e => setCols(e.target.value)} className=\"form-control\" />\r\n        </div>\r\n      </div>\r\n      <table id=\"editor-table\" className=\"table table-bordered\" contentEditable=\"true\" ref={editorEl}></table>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default TableForm;","import React, { useEffect, useState } from 'react';\r\nimport Formatting from './Formatting';\r\nimport Match from './Match';\r\nimport HeadingForm from './Forms/HeadingForm';\r\nimport ImageForm from './Forms/ImageForm';\r\nimport ParagraphForm from './Forms/ParagraphForm';\r\nimport BlockquoteForm from './Forms/BlockquoteForm';\r\nimport EmbedForm from './Forms/EmbedForm';\r\nimport ListForm from './Forms/ListForm';\r\nimport TableForm from './Forms/TableForm';\r\n\r\n\r\n// When the user is editing a section, what is the type of form to display\r\nconst FormSelector = props => {\r\n\r\n  const [tag, setTag] = useState(\"h1\");\r\n  const [align, setAlign] = useState(\"left\");\r\n\r\n  const done = data => props.done(data);\r\n  const cancel = data => props.cancel();\r\n\r\n  useEffect( () => {\r\n    console.log(tag);\r\n  }, [tag]);\r\n\r\n  // Match will display the child node if the tag matches the pattern\r\n  return (\r\n    <div className=\"outline-grey\">\r\n\r\n      {/* pick the tag type and the align type here */}\r\n      {/* also select bold, italics, underline */}\r\n      <Formatting tag={tag} setTag={setTag} align={align} setAlign={setAlign} />\r\n\r\n      {/* h1 -> h6 can all use the same form */}\r\n      <Match tag={tag} pattern={/^(h)(1|2|3|4|5|6)$/}>\r\n        <HeadingForm tag={tag} align={align} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* img tags will be contained in a <figure> */}\r\n      <Match tag={tag} pattern={/^(img)$/}>\r\n        <ImageForm tag={tag} align={align} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* p tags can have a lot of nested children like: */}\r\n      {/* a, code, strong, em, u */}\r\n      {/* for simplicity I'll make it so it only goes one element deeper */}\r\n      <Match tag={tag} pattern={/^(p)$/}>\r\n        <ParagraphForm tag={tag} align={align} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* basically the same as a paragraph to be honest */}\r\n      <Match tag={tag} pattern={/^(blockquote)$/}>\r\n        <BlockquoteForm tag={tag} align={align} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* a vimeo or youtube embed link can be used easily enough */}\r\n      <Match tag={tag} pattern={/^(iframe)$/}>\r\n        <EmbedForm tag={tag} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* really ordered and unordered lists work about the same way */}\r\n      <Match tag={tag} pattern={/^(o|u)l$/}>\r\n        <ListForm tag={tag} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(table)$/}>\r\n        <TableForm tag={tag} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(file)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{tag}\" not implemented</p>\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(pre)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{tag}\" not implemented</p>\r\n      </Match>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default FormSelector;\r\n","import React, { useState } from 'react';\r\nimport FormSelector from './FormTypes/FormSelector';\r\n\r\n\r\n// these boxes allow us to add new content exactly where we want it! \r\nconst AddSection = props => {\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const done = data => {\r\n    props.addSection(props.index, data);\r\n    setIsEditing(false);\r\n  }\r\n\r\n  const cancel = data => setIsEditing(false);\r\n\r\n  return (\r\n    <>\r\n      { \r\n        isEditing ? \r\n        <FormSelector done={done} cancel={cancel} /> : \r\n        <div className=\"add-section\" onClick={e => setIsEditing(true)}>\r\n          + Add Section\r\n        </div> \r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport FormSelector from './FormTypes/FormSelector';\r\n\r\nimport Formatting from './FormTypes/Formatting';\r\nimport Match from './FormTypes/Match';\r\nimport HeadingForm from './FormTypes/Forms/HeadingForm';\r\nimport ImageForm from './FormTypes/Forms/ImageForm';\r\nimport ParagraphForm from './FormTypes/Forms/ParagraphForm';\r\nimport BlockquoteForm from './FormTypes/Forms/BlockquoteForm';\r\nimport EmbedForm from './FormTypes/Forms/EmbedForm';\r\nimport ListForm from './FormTypes/Forms/ListForm';\r\nimport TableForm from './FormTypes/Forms/TableForm';\r\n\r\n\r\nconst EditSelector = props => {\r\n\r\n  const [align, setAlign] = useState(\"left\");\r\n\r\n  const done = data => props.done(data);\r\n  const cancel = data => props.cancel();\r\n\r\n  return (\r\n    <>\r\n      <Formatting tag={props.ele.tagName} setTag={tag => console.log(tag)} align={align} setAlign={setAlign} />\r\n\r\n      {/* h1 -> h6 can all use the same form */}\r\n      <Match tag={props.ele.tagName} pattern={/^(h)(1|2|3|4|5|6)$/}>\r\n        <HeadingForm tag={props.ele.tagName} align={align} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      {/* img tags will be contained in a <figure> */}\r\n      <Match tag={props.ele.tagName} pattern={/^(img)$/}>\r\n        <ImageForm tag={props.ele.tagName} align={align} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      {/* p tags can have a lot of nested children like: */}\r\n      {/* a, code, strong, em, u */}\r\n      {/* for simplicity I'll make it so it only goes one element deeper */}\r\n      <Match tag={props.ele.tagName} pattern={/^(p)$/}>\r\n        <ParagraphForm tag={props.ele.tagName} align={align} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      {/* basically the same as a paragraph to be honest */}\r\n      <Match tag={props.ele.tagName} pattern={/^(blockquote)$/}>\r\n        <BlockquoteForm tag={props.ele.tagName} align={align} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      {/* a vimeo or youtube embed link can be used easily enough */}\r\n      <Match tag={props.ele.tagName} pattern={/^(iframe)$/}>\r\n        <EmbedForm tag={props.ele.tagName} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      {/* really ordered and unordered lists work about the same way */}\r\n      <Match tag={props.ele.tagName} pattern={/^(o|u)l$/}>\r\n        <ListForm tag={props.ele.tagName} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      <Match tag={props.ele.tagName} pattern={/^(table)$/}>\r\n        <TableForm tag={props.ele.tagName} done={done} cancel={cancel} ele={props.ele} />\r\n      </Match>\r\n\r\n      <Match tag={props.ele.tagName} pattern={/^(file)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{props.ele.tagName}\" not implemented</p>\r\n      </Match>\r\n\r\n      <Match tag={props.ele.tagName} pattern={/^(pre)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{props.ele.tagName}\" not implemented</p>\r\n      </Match>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nconst ShowSection = props => {\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const done = data => {\r\n    console.log(\"done\", data);\r\n    props.updateSection(props.index, data);\r\n    setIsEdit(false);\r\n  }\r\n  const cancel = e => setIsEdit(false);\r\n\r\n  useEffect(() => {\r\n    console.log(props.ele);\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      { \r\n        isEdit ? \r\n        <EditSelector done={done} cancel={cancel} ele={props.ele} /> : \r\n        <div onMouseEnter={e => setIsHover(true)} onMouseLeave={e => setIsHover(false)} style={{display:\"flex\"}}>\r\n          <div className=\"content-section\" \r\n            dangerouslySetInnerHTML={{__html: props.ele._html()}} style={{flex:\"1\"}}/>\r\n          { isHover ? <button className=\"btn btn-link\" onClick={e => setIsEdit(true)}><i className=\"far fa-edit\"></i></button> : \"\"}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default ShowSection;","import React, { useEffect, useState } from 'react';\r\nimport AddSection from './AddSection';\r\nimport ShowSection from './ShowSection';\r\n\r\n// this is displaying everything? really?\r\nconst Editor = props => {\r\n\r\n  // all of the content on the page will be stored inside this list\r\n  // we can get the markup by just looping and calling _html()\r\n  const [content, setContent] = useState([]);\r\n  \r\n  // adds a new section into the page, nifty!\r\n  const addSection = (index, ele) => {\r\n    const temp = [...content];\r\n    temp.splice(index+1, 0, ele);\r\n    setContent(temp);\r\n  }\r\n\r\n  // just uh, swap out the element, should be alright!\r\n  // sometimes deeply nested changes aren't seen though...\r\n  const updateSection = (index, ele) => {\r\n    const temp = [...content];\r\n    temp[index] = ele;\r\n    setContent(temp);\r\n  }\r\n\r\n  const removeSection = (index) => {\r\n    // TODO: what if we need to remove a section?\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"bg-dark text-light p-3\">Wiki Editor</h1>\r\n      <AddSection index={-1} addSection={addSection} />\r\n      { content.map( (ele, i) => <div key={i}>\r\n          <ShowSection index={i} ele={ele} updateSection={updateSection}/>\r\n          <AddSection index={i} addSection={addSection} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;","import Editor from './Components/Editor/Editor';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}