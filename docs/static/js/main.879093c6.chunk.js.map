{"version":3,"sources":["Components/Editor/FormTypes/Button.jsx","Components/Editor/FormTypes/Formatting.jsx","Components/Editor/FormTypes/Match.jsx","Components/Editor/FormTypes/Forms/models.js","Components/Editor/FormTypes/Forms/HeadingForm.jsx","Components/Editor/FormTypes/Forms/ImageForm.jsx","Components/Editor/FormTypes/Forms/ParagraphForm.jsx","Components/Editor/FormTypes/Forms/BlockquoteForm.jsx","Components/Editor/FormTypes/Forms/EmbedForm.jsx","Components/Editor/FormTypes/Forms/ListForm.jsx","Components/Editor/FormTypes/FormSelector.jsx","Components/Editor/AddSection.jsx","Components/Editor/Editor.jsx","App.jsx","index.js"],"names":["Button","props","type","onClick","click","className","active","data-tooltip","aria-label","tooltip","onMouseDown","e","preventDefault","children","Formatting","apply","includes","tag","selection","window","getSelection","console","log","parent","anchorNode","nodeName","parentElement","line","textContent","st","Math","min","anchorOffset","focusOffset","ed","max","newNode","document","createElement","appendChild","createTextNode","substring","nodes","length","replaceChild","after","setTag","align","setAlign","Match","pattern","test","toLowerCase","String","prototype","formatSpace","res","prev","this","letter","ParagraphModel","tagName","content","style","id","classes","_id","_class","_style","_align","HeaderModel","text","ImageModel","filename","src","alt","height","width","caption","EmbedModel","BlockquoteModel","ListModel","HeadingForm","useState","setStyle","textInput","useRef","onSubmit","done","onReset","cancel","onChange","setText","target","value","fontWeight","fontSize","lineHeight","marginBottom","textAlign","ref","ImageForm","name","setName","setSrc","setHeight","setWidth","ratio","setRatio","imgStyle","setImgStyle","imgLoaded","useEffect","str","JSON","stringify","formatStyle","round","onLoad","file","files","reader","FileReader","addEventListener","Name","result","readAsDataURL","ParagraphForm","editorEl","current","innerHTML","contentEditable","minHeight","boxSizing","outline","padding","BlockquoteForm","p","EmbedForm","dangerouslySetInnerHTML","__html","resize","placeholder","ListForm","listStyle","li","FormSelector","data","AddSection","isEditing","setIsEditing","addSection","index","Editor","setContent","ele","temp","splice","map","i","_html","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.879093c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// ehh... might as well be its own file?\r\n// button that does some neat things\r\nconst Button = props => {\r\n  return (\r\n    <button type=\"button\" \r\n      onClick={props.click}\r\n      className= {props.active ? \"btn btn-sm btn-dark\" : \"btn btn-sm btn-outline-dark\"} \r\n      data-tooltip=\"\" aria-label={props.tooltip}\r\n      onMouseDown={e => e.preventDefault()}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button';\r\n\r\n\r\n// Basically shove all of our buttons into one component! \r\nconst Formatting = props => {\r\n\r\n  // applies inline formatting to text\r\n  const apply = type => {\r\n    const acceptedTags = [\"p\", \"ul\", \"ol\", \"blockquote\"];\r\n    // if the tag isn't one of the accepted tags\r\n    // don't allow further formatting\r\n    if(!acceptedTags.includes(props.tag)) {\r\n      return;\r\n    }\r\n    const selection = window.getSelection();\r\n    console.log(type);\r\n    console.log(selection);\r\n    let parent = selection.anchorNode;\r\n    if(parent.nodeName === \"#text\") {\r\n      parent = parent.parentElement;\r\n    }\r\n    let line = selection.anchorNode.textContent;\r\n    let st = Math.min(selection.anchorOffset, selection.focusOffset);\r\n    let ed = Math.max(selection.anchorOffset, selection.focusOffset);\r\n    let newNode = document.createElement(type);\r\n    newNode.appendChild(document.createTextNode(line.substring(st, ed)));\r\n    let nodes = [\r\n      document.createTextNode(line.substring(0, st)),\r\n      newNode,\r\n      document.createTextNode(line.substring(ed, line.length))\r\n    ];\r\n    parent.replaceChild(nodes[0], selection.anchorNode);\r\n    nodes[0].after(nodes[1]);\r\n    nodes[1].after(nodes[2]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap justify-content-center\">\r\n\r\n      {/* I have higher ambitions for this section, mostly just grid / columns */}\r\n      {/* but it made sense to put tables and lists in here too */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Layout</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.tag === \"columns\"} tooltip=\"Columns\">\r\n            <i className=\"fas fa-columns\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"table\"} tooltip=\"Table\" click={e => props.setTag(\"table\")}>\r\n            <i className=\"fas fa-table\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"ul\"} tooltip=\"Unordered List\" click={e => props.setTag(\"ul\")}>\r\n            <i className=\"fas fa-list-ul\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"ol\"} tooltip=\"Ordered List\" click={e => props.setTag(\"ol\")}>\r\n            <i className=\"fas fa-list-ol\"></i>\r\n          </Button>\r\n          {/* Do we need to allow the user to indent or outdent lists? */}\r\n          {/* Seems like a nice to have for now */}\r\n          {/* <Button active={false} tooltip=\"Indent\">\r\n            <i className=\"fas fa-indent\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Outdent\">\r\n            <i className=\"fas fa-outdent\"></i>\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Various headers or other content to pick from */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Type</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.tag === \"h1\"} tooltip=\"Title\" click={e => props.setTag(\"h1\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>1</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h2\"} tooltip=\"Subtitle\" click={e => props.setTag(\"h2\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>2</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h3\"} tooltip=\"Heading\" click={e => props.setTag(\"h3\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>3</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"h4\"} tooltip=\"Subheading\" click={e => props.setTag(\"h4\")}>\r\n            <i className=\"fas fa-heading\"></i>&nbsp;<strong>4</strong>\r\n          </Button>\r\n          <Button active={props.tag === \"p\"} tooltip=\"Paragraph\" click={e => props.setTag(\"p\")}>\r\n            <i className=\"fas fa-paragraph\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"img\"} tooltip=\"Image\" click={e => props.setTag(\"img\")}>\r\n            <i className=\"far fa-image\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"file\"} tooltip=\"File Download\" click={e => props.setTag(\"file\")}>\r\n            <i className=\"fas fa-file-download\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"iframe\"} tooltip=\"Embed\" click={e => props.setTag(\"iframe\")}>\r\n            <i className=\"far fa-play-circle\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"pre\"} tooltip=\"Code Block\" click={e => props.setTag(\"pre\")}>\r\n            <i className=\"fas fa-code\"></i>\r\n          </Button>\r\n          <Button active={props.tag === \"blockquote\"} tooltip=\"Quote\" click={e => props.setTag(\"blockquote\")}>\r\n            <i className=\"fas fa-quote-left\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Control alignment here */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Align</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={props.align === \"left\"} tooltip=\"Align Left\" click={e => props.setAlign(\"left\")}>\r\n            <i className=\"fas fa-align-left\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"center\"} tooltip=\"Center Text\" click={e => props.setAlign(\"center\")}>\r\n            <i className=\"fas fa-align-center\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"right\"} tooltip=\"Align Right\" click={e => props.setAlign(\"right\")}>\r\n            <i className=\"fas fa-align-right\"></i>\r\n          </Button>\r\n          <Button active={props.align === \"justify\"} tooltip=\"Justify Text\" click={e => props.setAlign(\"justify\")}>\r\n            <i className=\"fas fa-align-justify\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tags for formatting text inside other sections */}\r\n      <div className=\"border p5\">\r\n        <div className=\"form-text mt0\">Inline</div>\r\n        <div className=\"btn-group\">\r\n          <Button active={false} tooltip=\"Bold\" click={e => apply(\"strong\")}>\r\n            <i className=\"fas fa-bold\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Italic\" click={e => apply(\"em\")}>\r\n            <i className=\"fas fa-italic\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Underline\" click={e => apply(\"u\")}>\r\n            <i className=\"fas fa-underline\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Link\">\r\n            <i className=\"fas fa-link\"></i>\r\n          </Button>\r\n          <Button active={false} tooltip=\"Inline Code\" click={e => apply(\"code\")}>\r\n            <i className=\"fas fa-code\"></i>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formatting;","import React from 'react';\r\n\r\n// ehh... might as well be its own file?\r\n// display the child node(s) if the pattern matches the tag\r\nconst Match = props => {\r\n  return (\r\n    props.pattern.test(props.tag.toLowerCase()) ? props.children : \"\"\r\n  );\r\n}\r\n\r\nexport default Match;","// front end models so I can keep the type of data I'm working with straight\r\n// but as Lilith says \"I hate anything straight\" \r\n// really I just need the markup so it can be displayed but I guess I have\r\n// higher ambitions for what we'll store in the DB\r\n// each class will have an _html() method to retrieve the markup\r\n\r\n\r\n// remove excess spaces in the _html\r\nString.prototype.formatSpace = function() {\r\n    let res = \"\", prev = null;\r\n    for(let letter of this) {\r\n        if(letter !== \" \" || prev !== \" \") {\r\n            res += letter;\r\n        }\r\n        prev = letter;\r\n    }\r\n    return res;\r\n}\r\n\r\n// class for sections containing a paragraph\r\n// going to just store the content as a string ¯\\_(ツ)_/¯\r\n// this is pretty much the same as header but I can do something \r\n// different with it later maybe\r\nexport class ParagraphModel {\r\n\r\n    constructor(tagName, content, align, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing an header\r\n// like: h1, h2, h3, h4...\r\nexport class HeaderModel {\r\n\r\n    constructor(tagName, text, align, style, id, classes){\r\n        this.tagName = tagName;\r\n        this.text = text;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.text}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing an image\r\nexport class ImageModel {\r\n\r\n    constructor(tagName, filename, src, alt, height, width, align, caption, style, id, classes){\r\n        this.tagName = tagName;\r\n        this.filename = filename;\r\n        this.src = src;\r\n        this.alt = alt;\r\n        this.height = height;\r\n        this.width = width;\r\n        this.align = align;\r\n        this.caption = caption;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.style ? _style = `style=\"${this.style}\"` : _style = \"\";\r\n        this.align ? _align = `style=\"text-align: ${this.align}\";` : _align = \"\";\r\n        return `<figure ${_align} >\r\n            <img src=\"${this.src}\" alt=\"${this.alt}\" ${_id} ${_class} ${_style} />\r\n        </figure>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing embed code\r\n// typically an iframe from youtube or vimeo\r\nexport class EmbedModel {\r\n\r\n    constructor(tagName, content) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n    }\r\n\r\n    // don't really need to do anything with this one!\r\n    _html() {\r\n        return this.content;\r\n    }\r\n\r\n}\r\n\r\n// class for sections containing blockquotes\r\n// pretty identical to paragraphs\r\nexport class BlockquoteModel {\r\n\r\n    constructor(tagName, content, align, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.align = align;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style, _align;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        this.align ? _align = `text-align:${this.align};` : _align = \"\";\r\n        _style = `style=\"${_align+this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n\r\n// list model for ul and ol\r\n// similar to paragraphs and blockquotes\r\n// didn't make sense to apply align on this one\r\n// maybe I'll change my mind we'll see!\r\nexport class ListModel {\r\n\r\n    constructor(tagName, content, style, id, classes) {\r\n        this.tagName = tagName;\r\n        this.content = content;\r\n        this.style = style;\r\n        this.id = id;\r\n        this.classes = classes;\r\n    }\r\n\r\n    _html() {\r\n        let _id, _class, _style;\r\n        this.id ? _id = `id=\"${this.id}\"` : _id = \"\";\r\n        this.classes ? _class = `class=\"${this.classes}\"` : _class = \"\";\r\n        _style = `style=\"${this.style}\"`;\r\n        return `<${this.tagName} ${_id} ${_class} ${_style}>${this.content}</${this.tagName}>`.formatSpace();\r\n    }\r\n\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { HeaderModel } from './models';\r\n\r\n// from for creating a header: h1, h2, h3, h4 \r\n// do we need h5 and h6?\r\nconst HeadingForm = props => {\r\n  \r\n  const [style, setStyle] = useState(\"\")\r\n  // const [id, setId] = useState(\"\");\r\n  // const [classes, setClasses] = useState(\"\");\r\n\r\n  // should really do something with this huh?\r\n  let textInput = useRef(null);\r\n\r\n  // quick reference for header styles\r\n  const headerStyles = {\r\n    \"h1\": {fontWeight: 500, fontSize: \"32px\", lineHeight: \"48px\", marginBottom: \"20px\"},\r\n    \"h2\": {fontWeight: 500, fontSize: \"26px\", lineHeight: \"39px\", marginBottom: \"20px\"},\r\n    \"h3\": {fontWeight: 500, fontSize: \"22px\", lineHeight: \"33px\", marginBottom: \"20px\"},\r\n    \"h4\": {fontWeight: 500, fontSize: \"22px\", lineHeight: \"33px\", marginBottom: \"20px\"}\r\n  };\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new HeaderModel(props.tag, props.text, props.align, style, \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel(\"cancelling\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <div className=\"input-group my-3\">\r\n        <span className=\"input-group-text\" style={{width:\"50px\"}}>{props.tag}</span>\r\n        <input type=\"text\" \r\n          className=\"form-control mb0\" \r\n          onChange={e => props.setText(e.target.value)} \r\n          style={{...headerStyles[props.tag], textAlign: props.align}}\r\n          value={props.text} \r\n          ref={textInput} \r\n        />\r\n      </div>\r\n      <div className=\"input-group mb-3\">\r\n        <span className=\"input-group-text\">Custom Style</span>\r\n        <input type=\"text\" \r\n          className=\"form-control mb0\" \r\n          onChange={e => setStyle(e.target.value)} \r\n          value={style} \r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n  \r\n}\r\n  \r\nexport default HeadingForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ImageModel } from './models';\r\n\r\n\r\n// helper function for formatting our style a bit\r\nfunction formatStyle(style) {\r\n  let str = JSON.stringify(style);\r\n  let res = \"\";\r\n  for(let letter of str) {\r\n    if(letter === \",\") {\r\n      res += \";\";\r\n    } else if(letter !== \"{\" && letter !== \"}\" && letter !== \"\\\"\") {\r\n      res += letter;\r\n    }\r\n  }\r\n  res += \";\"\r\n  console.log(res);\r\n  return res;\r\n}\r\n\r\n// Image upload is complicated\r\n// probably put too much time into this one...\r\nconst ImageForm = props => {\r\n  \r\n  const [name, setName] = useState(\"not selected\");\r\n  const [src, setSrc] = useState(\"\");\r\n  const [height, setHeight] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const [ratio, setRatio] = useState(null);\r\n  const [imgStyle, setImgStyle] = useState({});\r\n\r\n  const upload = e => {\r\n    setSrc(\"\");\r\n    setImgStyle({});\r\n    console.log(e);\r\n    let file = e.target.files[0];\r\n    console.log(file);\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      setName(file.Name);\r\n      setSrc(reader.result);\r\n    }, false);\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new ImageModel(\"img\", name, src, name, height, width, props.align, \"\", formatStyle(imgStyle), \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  const imgLoaded = e => {\r\n    setWidth(e.target.width);\r\n    setHeight(e.target.height);\r\n    setRatio(e.target.width / e.target.height);\r\n  }\r\n\r\n  const changeHeight = e => {\r\n    setHeight(e.target.value);\r\n    setWidth(Math.round(e.target.value * ratio));\r\n  }\r\n\r\n  const changeWidth = e => {\r\n    setWidth(e.target.value);\r\n    setHeight(Math.round( e.target.value / ratio));\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImgStyle({height: height+\"px\", width: width+\"px\"});\r\n  }, [height]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      \r\n      {src ? <div className=\"row my-3\">\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Height</span>\r\n          <input type=\"number\" min=\"0\" value={height} onChange={changeHeight} className=\"form-control\" />\r\n          <span className=\"input-group-text\">px</span>\r\n        </div>\r\n        <div className=\"col input-group\">\r\n          <span className=\"input-group-text\">Width</span>\r\n          <input type=\"number\" min=\"0\" value={width} onChange={changeWidth} className=\"form-control\" />\r\n          <span className=\"input-group-text\">px</span>\r\n        </div>\r\n        </div> : \"\" }\r\n\r\n      {src ? <figure style={{textAlign: props.align}}>\r\n        <img src={src} alt={name} style={imgStyle}\r\n          onLoad={e => imgLoaded(e)} \r\n          onChange={e => imgLoaded(e)} \r\n          className=\"img-upload\" />\r\n      </figure> : \"\"}\r\n\r\n      <input \r\n        type=\"file\" \r\n        className=\"form-control\"\r\n        onChange={upload}\r\n      />\r\n      \r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n  \r\n}\r\n  \r\nexport default ImageForm;","import React, { useRef } from 'react';\r\nimport { ParagraphModel } from './models';\r\n\r\n\r\n// paragraphs are not as involved as I expected\r\nconst ParagraphForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new ParagraphModel(props.tag, editorEl.current.innerHTML, props.align, \"\", \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <p id=\"editor-p\" contentEditable=\"true\"\r\n        ref={editorEl}\r\n        style={{\r\n          width: \"100%\",\r\n          minHeight: \"50px\",\r\n          boxSizing: \"border-box\",\r\n          outline: \"2px dashed #ccc\",\r\n          padding: \"20px\",\r\n          textAlign: props.align\r\n        }}></p>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default ParagraphForm;","import React, { useRef, useEffect } from 'react';\r\nimport { BlockquoteModel } from './models';\r\n\r\n\r\n// basically a glorified paragraph...\r\nconst BlockquoteForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    // makes sense to give it the blockquote css class by default\r\n    props.done(new BlockquoteModel(props.tag, editorEl.current.innerHTML, props.align, \"\", \"\", \"blockquote\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect(() => {\r\n    let p = document.createElement(\"p\");\r\n    p.appendChild(document.createTextNode(\"Your quote here\"));\r\n    editorEl.current.appendChild(p);\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      <blockquote \r\n        id=\"editor-blockquote\"\r\n        className=\"blockquote\"\r\n        ref={editorEl} \r\n        contentEditable=\"true\" \r\n        style={{\r\n          outline: \"2px dashed #ccc\",\r\n          padding: \"20px\",\r\n          textAlign: props.align\r\n        }}\r\n      ></blockquote>\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default BlockquoteForm;","import React, { useState } from 'react';\r\nimport { EmbedModel } from './models';\r\n\r\n\r\n// pretty basic form\r\n// embed will be like an iframe from youtube or vimeo\r\nconst EmbedForm = props => {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    props.done(new EmbedModel(props.tag, text));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content-section\" \r\n              dangerouslySetInnerHTML={{__html: text}} />\r\n      <form onSubmit={done} onReset={cancel}>\r\n        <textarea \r\n          className=\"form-control\"\r\n          style={{resize: \"none\"}}\r\n          placeholder=\"Paste the embed link here\" \r\n          onClick={e => setText(e.target.value)} />\r\n        <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n        <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n      </form>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default EmbedForm;","import React, { useRef, useEffect } from 'react';\r\nimport { ListModel } from './models';\r\n\r\n\r\n// lists are not as involved as I expected\r\nconst ListForm = props => {\r\n\r\n  const editorEl = useRef(null);\r\n  const listStyle = {\r\n    width: \"100%\",\r\n    minHeight: \"50px\",\r\n    boxSizing: \"border-box\",\r\n    outline: \"2px dashed #ccc\",\r\n    padding: \"20px\"\r\n  }\r\n\r\n  const done = e => {\r\n    e.preventDefault();\r\n    console.log(editorEl.current.innerHTML);\r\n    props.done(new ListModel(props.tag, editorEl.current.innerHTML, \"\", \"\", \"\"));\r\n  }\r\n\r\n  const cancel = e => {\r\n    e.preventDefault();\r\n    props.cancel();\r\n  }\r\n\r\n  // add the first li into the list so the user can begin editing?\r\n  // this seems to work \r\n  useEffect(() => {\r\n    let li = document.createElement(\"li\");\r\n    li.appendChild(document.createTextNode(\"your list here\"));\r\n    editorEl.current.appendChild(li);\r\n  }, [props.tag]);\r\n\r\n  return (\r\n    <form onSubmit={done} onReset={cancel}>\r\n      {props.tag === \"ul\" ? <ul id=\"editor-ul\" contentEditable=\"true\"\r\n        ref={editorEl} style={listStyle}></ul> : \"\" }\r\n      {props.tag === \"ol\" ? <ol id=\"editor-ul\" contentEditable=\"true\"\r\n        ref={editorEl} style={listStyle}></ol> : \"\" }\r\n      <button type=\"submit\" className=\"btn btn-outline-primary\">Done</button>\r\n      <button type=\"reset\" className=\"btn btn-outline-secondary\">Cancel</button>\r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default ListForm;","import React, { useEffect, useState } from 'react';\r\nimport Formatting from './Formatting';\r\nimport Match from './Match';\r\nimport HeadingForm from './Forms/HeadingForm';\r\nimport ImageForm from './Forms/ImageForm';\r\nimport ParagraphForm from './Forms/ParagraphForm';\r\nimport BlockquoteForm from './Forms/BlockquoteForm';\r\nimport EmbedForm from './Forms/EmbedForm';\r\nimport ListForm from './Forms/ListForm';\r\n\r\n\r\n// When the user is editing a section, what is the type of form to display\r\nconst FormSelector = props => {\r\n\r\n  const [tag, setTag] = useState(\"h1\");\r\n  const [align, setAlign] = useState(\"left\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const done = data => {\r\n    props.done(data)\r\n  }\r\n\r\n  const cancel = data => {\r\n    props.cancel();\r\n  }\r\n\r\n  useEffect( () => {\r\n    console.log(tag);\r\n  }, [tag]);\r\n\r\n  // Match will display the child node if the tag matches the pattern\r\n  return (\r\n    <div className=\"outline-grey\">\r\n\r\n      {/* pick the tag type and the align type here */}\r\n      {/* also select bold, italics, underline */}\r\n      <Formatting tag={tag} setTag={setTag} align={align} setAlign={setAlign} />\r\n\r\n      {/* h1 -> h6 can all use the same form */}\r\n      <Match tag={tag} pattern={/^(h)(1|2|3|4|5|6)$/}>\r\n        <HeadingForm tag={tag} align={align} done={done} cancel={cancel} text={text} setText={setText} />\r\n      </Match>\r\n\r\n      {/* img tags will be contained in a <figure> */}\r\n      <Match tag={tag} pattern={/^(img)$/}>\r\n        <ImageForm tag={tag} align={align} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* p tags can have a lot of nested children like: */}\r\n      {/* a, code, strong, em, u */}\r\n      {/* for simplicity I'll make it so it only goes one element deeper */}\r\n      <Match tag={tag} pattern={/^(p)$/}>\r\n        <ParagraphForm tag={tag} align={align} done={done} cancel={cancel} text={text} setText={setText} />\r\n      </Match>\r\n\r\n      {/* basically the same as a paragraph to be honest */}\r\n      <Match tag={tag} pattern={/^(blockquote)$/}>\r\n        <BlockquoteForm tag={tag} align={align} done={done} cancel={cancel} text={text} setText={setText} />\r\n      </Match>\r\n\r\n      {/* a vimeo or youtube embed link can be used easily enough */}\r\n      <Match tag={tag} pattern={/^(iframe)$/}>\r\n        <EmbedForm tag={tag} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      {/* really ordered and unordered lists work about the same way */}\r\n      <Match tag={tag} pattern={/^(o|u)l$/}>\r\n        <ListForm tag={tag} done={done} cancel={cancel} />\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(table)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{tag}\" not implemented</p>\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(file)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{tag}\" not implemented</p>\r\n      </Match>\r\n\r\n      <Match tag={tag} pattern={/^(pre)$/}>\r\n        <p className=\"text-primary text-center py-3\">TODO: \"{tag}\" not implemented</p>\r\n      </Match>\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default FormSelector;\r\n","import React, { useState } from 'react';\r\nimport FormSelector from './FormTypes/FormSelector';\r\n\r\n\r\n// these boxes allow us to add new content exactly where we want it! \r\nconst AddSection = props => {\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const done = data => {\r\n    props.addSection(props.index, data);\r\n    setIsEditing(false);\r\n  }\r\n\r\n  const cancel = data => {\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { \r\n        isEditing ? \r\n        <FormSelector done={done} cancel={cancel} /> : \r\n        <div className=\"add-section\" onClick={e => setIsEditing(true)}>\r\n          + Add Section\r\n        </div> \r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddSection;\r\n","import React, { useState } from 'react';\r\nimport AddSection from './AddSection';\r\n\r\n\r\n// this is displaying everything? really?\r\nconst Editor = props => {\r\n\r\n  // all of the content on the page will be stored inside this list\r\n  // we can get the markup by just looping and calling _html()\r\n  const [content, setContent] = useState([]);\r\n  \r\n  // adds a new section into the page, nifty!\r\n  const addSection = (index, ele) => {\r\n    const temp = [...content];\r\n    temp.splice(index+1, 0, ele);\r\n    setContent(temp);\r\n  }\r\n\r\n  // just uh, swap out the element, should be alright!\r\n  // sometimes deeply nested changes aren't seen though...\r\n  // TODO: reminder to test this actually works\r\n  const updateSection = (index, ele) => {\r\n    const temp = [...content];\r\n    temp[index] = ele;\r\n    setContent(temp);\r\n  }\r\n\r\n  const removeSection = (index) => {\r\n    // TODO: what if we need to remove a section?\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"bg-dark text-light p-3\">Wiki Editor</h1>\r\n      <AddSection index={-1} addSection={addSection} />\r\n      { content.map( (ele, i) => <div key={i}>\r\n          <div className=\"content-section\" \r\n            dangerouslySetInnerHTML={{__html: ele._html()}} />\r\n          <AddSection index={i} addSection={addSection} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;","import Editor from './Components/Editor/Editor';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}